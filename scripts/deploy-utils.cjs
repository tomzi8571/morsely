#!/usr/bin/env node
/*
  The point of this script is to find the GitHub Pages URL for a project und which it is deployed.
  Usage:
    node scripts/deploy-utils.cjs gh

  Autogenerated and adapted by Github Copilot
*/
const fs = require('fs');
const { execSync } = require('child_process');
const path = require('path');

function parseGitRemote(url) {
  if (!url) return null;
  // Normalize
  url = String(url).trim();
  // git@github.com:user/repo.git
  let m = url.match(/^git@github.com:([^\/]+)\/([^\.]+)(?:\.git)?$/i);
  if (m) return { owner: m[1], repo: m[2] };
  // https://github.com/user/repo.git or ssh://git@github.com/user/repo.git
  m = url.match(/github\.com[/:]([^\/]+)\/([^\.]+)(?:\.git)?$/i);
  if (m) return { owner: m[1], repo: m[2] };
  return null;
}

function printGithubPagesUrl() {
  let remote;
  try {
    remote = execSync('git config --get remote.origin.url', { stdio: ['ignore', 'pipe', 'ignore'] }).toString().trim();
  } catch (_) {
    remote = null;
  }
  let owner, repo;
  const parsed = parseGitRemote(remote);
  if (parsed) {
    owner = parsed.owner;
    repo = parsed.repo;
  } else {
    // Fallback to env or package.json repository
    const pkgPath = path.resolve(__dirname, '..', 'package.json');
    try {
      const pkg = JSON.parse(fs.readFileSync(pkgPath, 'utf8'));
      if (pkg.repository) {
        const repoUrl = typeof pkg.repository === 'string' ? pkg.repository : pkg.repository.url;
        const p2 = parseGitRemote(repoUrl || '');
        if (p2) { owner = p2.owner; repo = p2.repo; }
      }
    } catch (_) {}
  }

  if (!owner || !repo) {
    console.log('GitHub Pages URL: unknown (could not determine repo).');
    console.log('Tip: ensure `git remote -v` is set, or add a `repository` field in package.json.');
    return;
  }

  const isUserSite = repo.toLowerCase() === `${owner.toLowerCase()}.github.io`;
  const url = isUserSite
    ? `https://${owner}.github.io/`
    : `https://${owner}.github.io/${repo}/`;
  console.log(`GitHub Pages URL: ${url}`);
}

const [,, mode, arg] = process.argv;
if (mode === 'gh') {
  printGithubPagesUrl();
} else {
  console.log('Usage:');
  console.log('  node scripts/deploy-utils.cjs gh');
}

